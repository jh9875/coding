평소에 많이 풀어보던 dp문제라서 잘 풀렸다.

재귀적 동적계획법 방법을 써서

재귀함수의 파라미터로 y,x 값을 넣어주고 반환값은 경로의 갯수를 나타내기위해 int형으로 했다.

그리고 동적계획법을 쓰기위해 cache를 선언해주고 잘 풀었는데 계속 시간초과가 났다.

어떤게 잘못된것인지 궁굼해서 코드를 조금씩 바꿔보았지만 계속 시간초과다.

그래서 게시판에 검색해봤다.


문제는
내가 cache[][]배열을 아무런 초기화 안하고 그냥 0으로 써서 그랬다.

재귀함수 안에 
if(cache[y][x] !=0)
	return cache[y][x];
이런식으로 중복계산을 방지하기 위해 코드를 넣었는데 내가 생각하지 못한부분이 있었다.

이미 탐색을 하고 경로가 오른쪽 아래 도달하지 못하는 경우에 0을 반환하게되는데

저렇게하면 중복계산을 하게된다.

즉 메모이제이션 하는 효과가 부분적으로만 작동하게 된다.

그래서 처음 cache배열을 -1로 초기화하고 문제를 풀었더니 성공이다.