몇몇 DP문제는 쉽게 생각이 나는데 이건 좀 애먹었다..
아직 익숙하지 않은가보다.
DP는 큰문제를 작은문제로 나눠서 푸는것이다...
풀이를 보면
이 문제의 규칙은 3가지이다.
1. 마지막계단은 반드시 밟아야한다.
2. 연속된 세 개의 계단을 모두 밟아서는 안된다.
3. 계단은 한번에 한계단 또는 두 계단씩 오를수 있다.

이 규칙을이용해서 풀어야 한다.
일단 마지막 계단을 밟아야 한다.
그럼 나올수 있는 경우는 마지막을 밟고, 그 전계단을 밟은경우
그리고, 마지막 밟고, 전전 계단을 밟은경우이다.
2가지이다.
여기서 첫번째 마지막 and 전 계단 밟은경우는 마지막의 전전계단을 못밟는다.
그럼 마지막 계단을 n번째 계단이라고 하면
n. n-1, n-3을 밟을 수 있다.
두번째는 n, n-2를 밟을수있다.
첫번째와 두번째에서 제일 낮은 계단은 또 이 두개의 방식을 이을수있다?
예를 들어 첫번째에서, n-3을 k라고 하면 밟을수 있는 경우의 수는 
첫번째 k, k-1, k-3이고,
두번째 k, k-2이다.
똑같이 이어진다. 두번째 식도 똑같이 이어질 수 있다. 이러면 점화식이 나온다.
dp[n] =Math.max(arr[n] +arr[n-1] +dp[n-3], arr[n] +dp[n-2]);
Math.max에서 첫번째와 두번째 중에 큰 수를 선택한다.

(참고: https://kwanghyuk.tistory.com/4)