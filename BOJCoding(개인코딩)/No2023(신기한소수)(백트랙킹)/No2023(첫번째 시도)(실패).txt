import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.Arrays;

public class Main
{
	static final int MAX =100000000;
	static int N;
	static boolean[] pn =new boolean[MAX];
	static ArrayList<Integer> al =new ArrayList<>();
	
	public static void main(String[] args) throws Exception
	{
		BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw =new BufferedWriter(new OutputStreamWriter(System.out));
		int len =0;;
		getPrimeNumberArray();
		N =Integer.parseInt(br.readLine());
		
		for(int i =1; i <10; i++)
			solve(i +"");
		len =al.size();
		for(int i =0; i <len; i++)
			bw.write(al.get(i) +"\n");
		bw.flush();
		bw.close();
		br.close();
	} 
	
	public static void solve(String num)
	{
		if(!pn[Integer.parseInt(num)])
			return;
		if(num.length() ==N)
		{
			int n =Integer.parseInt(num.substring(0, N));
			if(pn[n])
				al.add(n);
			return;
		}
		for(int i =1; i <10; i++)
			solve(num +i);
	}
	
	public static void getPrimeNumberArray()
	{
		Arrays.fill(pn, true);
		pn[0] =pn[1] =false;
		
		for(int i =2; i*i <MAX; i++)
			if(pn[i])
				for(int j =i*i; j <MAX; j+=i)
					pn[j] =false;
	}
}
