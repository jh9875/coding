import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class Main
{
	static class Pos
	{
		int y, x;
		Pos(int y, int x)
		{
			this.y =y;
			this.x =x;
		}
	}
	static boolean success =false;
	static int[][] board =new int[9][9];
	static ArrayList<Pos> list =new ArrayList<>();
	
	public static void main(String[] args) throws Exception
	{
		BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw =new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st;
		int n, rest =0;
		
		for(int i =0; i <9; i++)
		{
			st =new StringTokenizer(br.readLine());
			for(int j =0; j <9; j++)
			{
				n =Integer.parseInt(st.nextToken());
				if(n ==0)
				{
					rest++;
					list.add(new Pos(i, j));
				}
				board[i][j] =n;
			}
		}
		solve(rest);
		bw.write(print());
		bw.flush();
	}
	
	static void solve(int rest)
	{
		if(rest ==0)
		{
			if(success())
				success =true;
			return;
		}
		Pos p =list.get(rest-1);
		
		for(int i =1; i <10; i++)
		{
			board[p.y][p.x] =i;
			solve(rest-1);
			if(success)
				return;
		}
	}
	static boolean success()
	{
		for(int i =0; i <9; i++)
		{
			boolean[] check =new boolean[10];
			for(int j =0; j <9; j++)
				check[board[i][j]] =true;
			for(int j =1; j <10; j++)
				if(!check[j])
					return false;
		}
		return true;
	}
	static String print()
	{
		StringBuilder sb =new StringBuilder();
		for(int i =0; i <9; i++)
		{
			for(int j =0; j <9; j++)
				sb.append(board[i][j] +" ");
			sb.append("\n");
		}
		return sb.toString();
	}
}