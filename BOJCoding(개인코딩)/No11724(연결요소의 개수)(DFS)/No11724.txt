import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Arrays;

public class Main
{	
	static int count =0;
	static int n =0, m =0;				//정점의 개수, 간선의 개수
	static int[][] arr;
	static boolean[] visited;
	public static void main(String[] args) throws Exception
	{
		BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw =new BufferedWriter(new OutputStreamWriter(System.out));
		
		String[] input =null;
		input =br.readLine().split(" ");
		n =Integer.parseInt(input[0]);
		m =Integer.parseInt(input[1]);
		arr =new int[n+1][n+1];
		visited =new boolean[n+1];
		
		for(int i =1; i <=m; i++)
		{
			input =br.readLine().split(" ");
			int u =Integer.parseInt(input[0]);
			int v =Integer.parseInt(input[1]);
			arr[u][v] =1;
			arr[v][u] =1;
		}
		
		for(int i =1; i <=n; i++)
		{
			if(!visited[i])
			{
				count++;
				dfs(i);
			}
		}
		
		bw.write(count + "\n");
		bw.flush();
		bw.close();
		br.close();
	}
	public static void dfs(int start)
	{
		visited[start] =true;
		
		for(int i =1; i <=n; i++)
		{
			if(!visited[i] && arr[start][i] ==1)
			{
				dfs(i);
			}
		}
	}
	
	
}