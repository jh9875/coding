import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main
{
	
	public static void main(String[] args) throws IOException
	{
		BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw =new BufferedWriter(new OutputStreamWriter(System.out));
		int n =Integer.parseInt(br.readLine());
		int[][] map =new int[n][n];
		int[][] visited =new int[n][n];
		for(int i =0; i <n; i++)
		{
			String[] s =br.readLine().split(" ");
			for(int j =0; j <n; j++)
				map[i][j] =Integer.parseInt(s[j]);
		}
		
		for(int i =0; i <n; i++)
		{
			Queue<Integer> queue =new LinkedList<Integer>();
			queue.add(i);
			
			while(!queue.isEmpty())
			{
				int vertex =queue.poll();
				
				for(int j =0; j <n; j++)
				{
					if(map[vertex][j] ==1 && visited[i][j] !=1)
					{
						visited[i][j] =1;
						queue.add(j);
					}
				}
			}
		}
		
		for(int i =0; i <visited.length; i++)
		{
			for(int j =0; j <visited[i].length; j++)
				bw.write(visited[i][j] + " ");
			bw.write("\n");
		}
		
		bw.flush();
		bw.close();
		br.close();
	}

}