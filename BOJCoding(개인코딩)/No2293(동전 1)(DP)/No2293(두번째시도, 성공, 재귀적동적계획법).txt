import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main
{
	static int n, k;
	static int[] coin =new int[101];
	static int[][] cache =new int[101][10001];
	
	public static void main(String[] args) throws Exception
	{
		BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw =new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st;
		int ans =0;
		
		st =new StringTokenizer(br.readLine());
		n =Integer.parseInt(st.nextToken());
		k =Integer.parseInt(st.nextToken());
		for(int i =1; i <=n; i++)
		{
			coin[i] =Integer.parseInt(br.readLine());
			Arrays.fill(cache[i], -1);
		}
		ans =solve(1, 0);
		
		bw.write(ans +"\n");
		bw.flush();
		bw.close();
		br.close();
	}
	
	static int solve(int index, int value)
	{
		if(index >n || value >k)
			return 0;
		if(value ==k)
			return 1;
		if(cache[index][value] !=-1)
			return cache[index][value];
		cache[index][value] =0;
		
		for(int i =index; i <=n; i++)
			cache[index][value] +=solve(i, value +coin[i]);
		
		return cache[index][value];
	}
}
