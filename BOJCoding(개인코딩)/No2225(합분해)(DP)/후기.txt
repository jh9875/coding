처음 완전탐색으로 풀었을땐 틀렸다..

아직까진 동적계획법이 익숙하지 않아서 완전탐색으로 구현해본 후
메모이제이션을 적용해보는 방식으로 문제를 풀어보고 있다.

일단 완전탐색 알고리즘은 이렇다.

함수의 반환형은 숫자 K개를 더해서 N이 되면 1을 반환하게 한다.(경우의 수 구하는 문제)

파라미터는 sum과 count 를 넣었는데 

기저사례는 sum이 N을 넘거나 count가 K를 넘으면 반환하게끔했다.

그리고 sum이 N, count가 K가 되면 1을 반환하게했다..

여기서 메모이제이션을 적용해야되는데

단순하게 생각하면 그냥 그대로 메모한다고 생각하고 해야겠다.

문제서 값의 범위가 각각 200씩이다.

메모를 해둘 저장공간을 cache라고 하면 2차원 int 형 배열을 선언해서

행은 sum의 값을 저장하고, 열은 count의 값을 저장했다.

그래서 함수가 나중에 중복계산할 때 각각 sum과 count가 이전에 계산했던 사례가 나오게되면

따로 계산하지 않고 메모해 둔 자료를 쓰게했다.