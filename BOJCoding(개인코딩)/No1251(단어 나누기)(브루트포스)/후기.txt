이 문제는 단순히 단어를 3부분으로 나누고, 각각 뒤집은 다음에 붙여서 사전순으로 배교해서
가장 빠른것을 출력하면 되는 문제다.

일단 내가 사용한 방법은 3부분으로 나눠야 되기 때문에 2개의 나누는 위치가 있으면 된다.
그래서 이중 for문으로 했다.

재귀함수에 익숙해 질려고 재귀함수로 할려했는데 뭔가 비효율적인것 같아서 이중 for문으로 했다.

나누는 코드는 다음고 같다.

for(int first =1; first <len-1; first++)
{
	for(int second =first+1; second <len; second++)
	{
		String temp =divideAndMerge(first, second);
		if(ret.compareTo(temp) >0)
			ret =new String(temp);
	}
}

여기서 first가 len-1인 까닭은 자른 각 단어의 길이가 1이상이어야 하기 때문이다.

이 위치들을 바탕으로
다음과같이 3부분으로 나누었다.
String s1 =word.substring(0, first);
String s2 =word.substring(first, second);
String s3 =word.substring(second);

그리고 자바의 StringBuilder의 reverse로 이용해서 쉽게 문자를 뒤집고 다 붙인걸 비교해서
사전순으로 제일 빠른 문자열을 출력했다.
