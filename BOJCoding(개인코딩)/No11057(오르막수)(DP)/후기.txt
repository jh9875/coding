일단 이 문제를 재귀함수를 이용한 완전탐색 + 메모이제이션으로 풀어봤다.

처음 완전탐색으로 문제를 풀 경우.

첫자리는 0~9, 10개가 올 수 있다.

두번째 자리는 첫자리 숫자에 따라서 달라진다.

만약 첫번째 자리가 0이라면 두번째 자리는 0~9
       첫번째 자리가 1이라면 두번째 자리는 1~9
이런식으로 올 수있다.

함수에서 각 자릿수마다 올 수 있는 숫자들을 넣어주고, 이전 자릿수 숫자에 따라서
다음 자릿수에 올 수 있는 숫자가 달라지므로 
함수의 파라미터에는 index와 num이 들어갔다.

그리고 반환형은 int로 했는데 갯수를 반환해야 하기 때문이다.

함수의 기저사례는 숫자가 마지막 자릿수면 1가지 경우로 쳐야 되므로
if(index ==N)
	return 1;
와 같이 해줬다.

그리고 다음자릿수를 정하기 위해선 다음과 같은 코드를 썼다.
for(int num =start; num <10; num++)
	cache[index][start] +=ascendingOrder(index+1, num)%MOD;

그렇다면 중복계산 되는 부분은 잘 생각해보면 나온다.

만약 n자리에서 이전 숫자와 상관없이 뒤에 나올 수 있는 숫자들의 경우의 수는 모두 같다.
그러므로 그걸 이용해서 cache에 저장해서 중복계산 해야될 경우 써먹으면 된다.