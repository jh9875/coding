import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

public class Main
{
	static int N;
	static int[] health;
	static int[] pleasure;
	
	public static void main(String[] args) throws Exception
	{
		BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw =new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st;
		int ans;
		
		N =Integer.parseInt(br.readLine());
		health =new int[N];
		pleasure =new int[N];
		
		st =new StringTokenizer(br.readLine());
		for(int i =0; i <N; i++)
			health[i] =Integer.parseInt(st.nextToken());
		st =new StringTokenizer(br.readLine());
		for(int i =0; i <N; i++)
			pleasure[i] =Integer.parseInt(st.nextToken());
		
		ans =getMaxPleasure(0, 100);
		bw.write(ans +"\n");
		bw.flush();
		bw.close();
		br.close();
	} 
	
	public static int getMaxPleasure(int index, int restHealth)
	{
		if(index >=N)
			return 0;
		int ret =0;
		//인사 안하는경우 | 하는경우.
		if(restHealth -health[index] >0)
			ret =Math.max(getMaxPleasure(index+1, restHealth),
					getMaxPleasure(index+1, restHealth-health[index]) +pleasure[index]);
		else
			ret =getMaxPleasure(index+1, restHealth);
		return ret;	
	}
}
