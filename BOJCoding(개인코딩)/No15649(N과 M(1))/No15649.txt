import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Iterator;
import java.util.Stack;
import java.util.StringTokenizer;

public class Main
{
	static BufferedWriter bw =new BufferedWriter(new OutputStreamWriter(System.out));
	static int N, M;
	static Stack<Integer> stack =new Stack<>();
	static boolean[] check;
	
	public static void main(String[] args) throws Exception
	{
		BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		
		
		st =new StringTokenizer(br.readLine());
		N =Integer.parseInt(st.nextToken());
		M =Integer.parseInt(st.nextToken());
		check =new boolean[N+1];
		
		pick(M);
		
		bw.flush();
		bw.close();
		br.close();
	}
	
	public static void pick(int toPick) throws IOException
	{
		if(toPick ==0)
		{
			Iterator<Integer> it =stack.iterator();
			
			while(it.hasNext())
				bw.write(it.next() +" ");
			bw.write("\n");
			return;
		}
		
		for(int i =1; i <N+1; i++)
		{
			if(!check[i])
			{
				check[i] =true;
				stack.push(i);
				pick(toPick-1);
				check[i] =false;
				stack.pop();
			}
			
		}
	}
	
	
}
