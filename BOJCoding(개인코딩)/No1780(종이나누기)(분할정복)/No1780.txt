import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Main
{
	static int[][] arr;
	static int[] numCount =new int[3];			//-1, 0, 1 숫자 카운트
	public static void main(String[] args) throws NumberFormatException, IOException
	{
		BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw =new BufferedWriter(new OutputStreamWriter(System.out));
		int n =Integer.parseInt(br.readLine());
		arr =new int[n][n];
		for(int i =0; i <n; i++)
		{
			String[] s =br.readLine().split(" ");
			for(int j =0; j <n; j++)
				arr[i][j] =Integer.parseInt(s[j]);
		}
		divide(0, 0, n);
		
		for(int i =0; i <numCount.length; i++)
			bw.write(numCount[i] + "\n");
		bw.flush();
		bw.close();
		br.close();
	}
	public static void divide(int r, int c, int n)
	{
		if(check(r, c, n))					//구간에 모두 같으면 1개로 친다.
		{
			if(arr[r][c] ==-1)
				numCount[0]++;
			else if(arr[r][c] ==0)
				numCount[1]++;
			else if(arr[r][c] ==1)
				numCount[2]++;
		}else
		{
			int newRange =n /3;
			for(int i =0; i <3; i++)
			{
				for(int j =0; j <3; j++)
				{
					divide(r +newRange*i, c +newRange *j, newRange);
				}
			}
		}
	}
	public static boolean check(int r, int c, int n)
	{
		int first =arr[r][c];
		for(int i =r; i <r+n; i++)
		{
			for(int j =c; j <c+n; j++)
			{
				if(arr[i][j] !=first)
					return false;
			}
		}
		return true;
	}
}