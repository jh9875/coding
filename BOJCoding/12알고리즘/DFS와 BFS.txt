import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main
{
	static int[][] graph;
	static boolean[] visited;
	static int n;
	static int m;
	static int v;
	public static void main(String[] args)
	{
		Scanner input =new Scanner(System.in);
		n =input.nextInt();
		m =input.nextInt();
		v =input.nextInt();
		graph =new int[n+1][n+1];
		visited =new boolean[n+1];
		for(int i =0; i <m; i++)
		{
			int v1 =input.nextInt();
			int v2 =input.nextInt();
			graph[v1][v2] =1;
			graph[v2][v1] =1;
		}
		dfs(v);
		System.out.println();
		Arrays.fill(visited, false);
		bfs(v);
		System.out.println();
	}
	public static void dfs(int i)
	{
		visited[i] =true;
		System.out.print(i +" ");
		for(int j =0; j <graph[i].length; j++)
		{
			if(graph[i][j] ==1 && !visited[j])
				dfs(j);
		}
	}
	public static void bfs(int i)
	{
		Queue<Integer> queue =new LinkedList<Integer>();
		queue.offer(i);
		visited[i] =true;
		System.out.print(i + " ");
		int start;
		while(!queue.isEmpty())
		{
			start =queue.poll();
			for(int j =0; j <=n; j++)
			{
				if(graph[start][j] ==1 && !visited[j])
				{
					visited[j] =true;
					queue.offer(j);
					System.out.print(j + " ");
				}
			}
		}
	}
}