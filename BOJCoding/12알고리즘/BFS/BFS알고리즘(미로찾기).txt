import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main
{
	static class Point
	{
		int x;
		int y;
		Point(int x, int y)
		{
			this.x =x;
			this.y =y;
		}
	}
	public static void main(String[] args)
	{
		Scanner input =new Scanner(System.in);
		Queue<Point> queue =new LinkedList<Point>();
		int n =input.nextInt();
		int m =input.nextInt();
		int[][] map =new int[n][m];
		boolean[][] check =new boolean[n][m];
		for(int i =0; i <n; i++)
		{
			String s =input.next();
			for(int j =0; j <s.length(); j++)
				map[i][j] =s.charAt(j) -48;
		}
			
		queue.add(new Point(0,0));
		check[0][0] =true;
		
		while(queue.size() >0)
		{
			Point p =queue.poll();
			check[p.x][p.y] =true;
			
			if(p.x +1 <n && !check[p.x +1][p.y] && map[p.x+1][p.y] !=0)	//아래
			{
				queue.add(new Point(p.x+1, p.y));
				check[p.x +1][p.y] =true;
				map[p.x +1][p.y] =map[p.x][p.y] +1;
			}
			if(p.y +1 <m && !check[p.x][p.y +1] && map[p.x][p.y +1] !=0)	//오른쪽
			{
				queue.add(new Point(p.x, p.y +1));
				check[p.x][p.y +1] =true;
				map[p.x][p.y +1] =map[p.x][p.y] +1;
			}
			if(p.x -1 >=0 && !check[p.x -1][p.y] && map[p.x-1][p.y] !=0)	//위
			{
				queue.add(new Point(p.x -1, p.y));
				check[p.x -1][p.y] =true;
				map[p.x -1][p.y] =map[p.x][p.y] +1;
			}
				
			if(p.y -1 >=0 && !check[p.x][p.y -1] && map[p.x][p.y -1] !=0)	//왼쪽
			{
				queue.add(new Point(p.x, p.y -1));
				check[p.x][p.y -1] =true;
				map[p.x][p.y -1] =map[p.x][p.y] +1;
			}
				
		}
		System.out.println(map[n-1][m-1]);
	}
}