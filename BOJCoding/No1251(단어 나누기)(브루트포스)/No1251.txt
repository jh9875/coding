import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

public class Main
{
	static String word;
	
	public static void main(String[] args) throws Exception
	{
		BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw =new BufferedWriter(new OutputStreamWriter(System.out));
		
		word =br.readLine();
		
		bw.write(getDividingPos() +"\n");
		bw.flush();
		bw.close();
		br.close();
	}
	
	public static String getDividingPos()
	{
		String ret ="zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz";
		int len =word.length();
		
		for(int first =1; first <len-1; first++)
		{
			for(int second =first+1; second <len; second++)
			{
				String temp =divideAndMerge(first, second);
				if(ret.compareTo(temp) >0)
					ret =new String(temp);
			}
		}
			
		return ret;
	}

	public static String divideAndMerge(int first, int second)
	{
		StringBuilder ret =new StringBuilder();;
		StringBuilder sb =new StringBuilder();
		String s1 =word.substring(0, first);
		String s2 =word.substring(first, second);
		String s3 =word.substring(second);
		
		//1뒤집고 붙이기
		sb.append(s1);
		sb.reverse();
		ret.append(sb.toString());
		sb.setLength(0);
		
		//2쥐집고 붙이기
		sb.append(s2);
		sb.reverse();
		ret.append(sb.toString());
		sb.setLength(0);
		
		sb.append(s3);
		sb.reverse();
		ret.append(sb.toString());
		sb.setLength(0);
		
		return ret.toString();
	}
	
}
