import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

public class Main
{
	
	public static void main(String[] args) throws Exception
	{
		BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw =new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st;
		int T;
		int x1, y1, r1, x2, y2, r2;
		
		T =Integer.parseInt(br.readLine());
		
		while(T-- >0)
		{
			st =new StringTokenizer(br.readLine());
			
			x1 =Integer.parseInt(st.nextToken());
			y1 =Integer.parseInt(st.nextToken());
			r1 =Integer.parseInt(st.nextToken());
			x2 =Integer.parseInt(st.nextToken());
			y2 =Integer.parseInt(st.nextToken());
			r2 =Integer.parseInt(st.nextToken());
			
			bw.write(getNumberOfPos(x1,y1,r1,x2,y2,r2) +"\n");
		}
		bw.flush();
		bw.close();
		br.close();
		st =null;
	}
	public static int getNumberOfPos(int x1, int y1, int r1, int x2, int y2, int r2)
	{
		int retNum =0;
		
		//크게 2가지 경우, 위치좌표가 같을 때, 다를 때.
		if(x1 ==x2 && y1 ==y2)
		{
			if(r1 ==r2)
				retNum =-1;
			//else	
			//	retNum =0;
		}else
		{
			double distance =Math.sqrt(Math.pow(x1-x2, 2) + Math.pow(y1-y2, 2));
			
			if(distance ==r1+r2)		//외접
				retNum =1;
			else if(distance <r1+r2 && Math.abs(r1-r2) <distance)		//2점에서 만남
				retNum =2;
			else if(Math.abs(r1-r2) ==distance)		//내접
				retNum =1;
			//else if(distance <Math.abd(r1-r2))	원에 포함되는경우.
			//	retNum =0;
			//else if(r1+r2 <distance)				멀리 떨어진경우.
			//	retNum =0;
		}	
		
		return retNum;
	}
}
